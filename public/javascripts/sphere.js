function sphere(){const t=7e-4;let e=document.getElementById("svg-container"),s=Array(e.children.length),h=[...e.children].map(((t,e)=>("g"==t.children[0].tagName?(t=t.children[0],s[e]=Array(t.children.length),s[e][0]=t.getAttribute("fill")):s[e]=Array(t.children.length),[...t.children].map(((t,h)=>{let i=t.getAttribute("fill");return null!==i?(console.log(i),s[e][h]=i):s[e][h]=s[e][0]?s[e][0]:"#FFF",new Path2D(t.getAttribute("d"))})))));const i=h.length;var a=document.getElementById("myCanvas"),o=a.getContext("2d");let c,n,l,r,d=a.offsetWidth,M=a.offsetHeight;function f(){c=.8*d,n=d/1.7,l=M/1.7,r=d/4,d=a.offsetWidth,M=a.offsetHeight,window.devicePixelRatio>1?(a.width=2*a.clientWidth,a.height=2*a.clientHeight,o.scale(2,2)):(a.width=d,a.height=M)}window.addEventListener("resize",f),f();let g=Math.PI*(3-Math.sqrt(5)),P=t,j=t,u=t,y=0,m=0,w=!1;a.addEventListener("mousemove",(t=>{w=!0,y=t.offsetX-d/2,m=t.offsetY-M/2,j=.05*y/d,u=.05*m/M})),a.addEventListener("mouseout",(function(e){w=!1;let s=-1*Math.atan2(m-M/2,y-d/2)+.5*Math.PI;console.log(s);Math.cos(s),Math.sin(s);!function e(){w||(u/=1.3,j/=1.3,Math.abs(u)<=t&&(u=Math.sign(u)*t),Math.abs(j)<=t&&(j=Math.sign(j)*t),u!=t&&j!=t&&setTimeout(e,200))}()}),!1);class p{constructor(t,e){this.colors=s[t],this.y=1-t/(i-1)*2;let h=Math.sqrt(1-this.y*this.y);this.theta=g*t,this.x=Math.cos(this.theta)*h,this.z=Math.sin(this.theta)*h,this.paths=e,this.xProjected=0,this.yProjected=0,this.scaleProjected=0}rotate(){let t=this.x*Math.cos(P)-this.y*Math.sin(P),e=this.x*Math.sin(P)+this.y*Math.cos(P),s=t*Math.cos(j)-this.z*Math.sin(j),h=t*Math.sin(j)+this.z*Math.cos(j),i=e*Math.cos(u)-h*Math.sin(u),a=e*Math.sin(u)+h*Math.cos(u);this.x=s,this.y=i,this.z=a}project(){this.rotate(),this.scaleProjected=c/(c+this.z*r),this.xProjected=this.x*r*this.scaleProjected+n-64*this.scaleProjected,this.yProjected=this.y*r*this.scaleProjected+l-64*this.scaleProjected}draw(){this.project(),o.save(),o.globalAlpha=Math.abs(1-3*this.z*r/d),o.beginPath(),o.translate(this.xProjected,this.yProjected),o.scale(1.1*this.scaleProjected*d/1920,1.1*this.scaleProjected*d/1920),this.paths.forEach(((t,e)=>{o.fillStyle=this.colors[e],o.fill(t)})),o.restore()}}const x=h.map(((t,e)=>new p(e,t)));!function t(){o.fillStyle="#1D1D1D",o.fillRect(0,0,d,M),x.sort(((t,e)=>t.scaleProjected-e.scaleProjected)),x.forEach((t=>{t.draw()})),window.requestAnimationFrame(t)}()}sphere();